install.packages("learnr")
install.packages("learnr")
install.packages("ggplot2")
mu_prior = 2
h_prior = 2
alpha_prior = mu_prior*h_prior
beta_prior = h_prior
sum_xi_1 = 18
n_1 = 6
alpha_posterior = alpha_prior + sum_xi_1
beta_posterior = beta_prior + n_1
print(paste("Alpha Posterior:", alpha_posterior, "\nBeta Posterior", beta_posterior))
mu_prior = 2
h_prior = 2
alpha_prior = mu_prior*h_prior
beta_prior = h_prior
sum_xi_1 = 18
n_1 = 6
alpha_posterior = alpha_prior + sum_xi_1
beta_posterior = beta_prior + n_1
print(paste("Alpha Posterior:", alpha_posterior, "\n","Beta Posterior", beta_posterior))
mu_prior = 2
h_prior = 2
alpha_prior = mu_prior*h_prior
beta_prior = h_prior
sum_xi_1 = 18
n_1 = 6
alpha_posterior = alpha_prior + sum_xi_1
beta_posterior = beta_prior + n_1
print(paste0("Alpha Posterior:", alpha_posterior, "\n","Beta Posterior", beta_posterior))
mu_prior = 2
h_prior = 2
alpha_prior = mu_prior*h_prior
beta_prior = h_prior
sum_xi_1 = 18
n_1 = 6
alpha_posterior = alpha_prior + sum_xi_1
beta_posterior = beta_prior + n_1
print(cat("Alpha Posterior:", alpha_posterior, "\n","Beta Posterior", beta_posterior))
mu_prior = 2
h_prior = 2
alpha_prior = mu_prior*h_prior
beta_prior = h_prior
sum_xi_1 = 18
n_1 = 6
alpha_posterior = alpha_prior + sum_xi_1
beta_posterior = beta_prior + n_1
print(cat("Alpha Posterior:", alpha_posterior, "\nBeta Posterior", beta_posterior))
mu_prior = 2
h_prior = 2
alpha_prior = mu_prior*h_prior
beta_prior = h_prior
sum_xi_1 = 18
n_1 = 6
alpha_posterior = alpha_prior + sum_xi_1
beta_posterior = beta_prior + n_1
cat("Alpha Posterior:", alpha_posterior, "\nBeta Posterior", beta_posterior)
e_mean = 22 / 8
e_var = 22 / ((8)**2)
cat("Expected Mean:", e_mean, "\nExpected Variance", e_var)
qinf<-qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=TRUE)
qsup<-qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=FALSE)
qinf
qsup
qsup2<-qgamma(p=0.975,shape=alfa,rate=beta,lower.tail=T) # alternativa
qsup2
# =====================================================================
alfa<-22; beta<-8  # parameters of the posterior distribution (Gamma)
qinf<-qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=TRUE)
qsup<-qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=FALSE)
qinf
qsup
qsup2<-qgamma(p=0.975,shape=alfa,rate=beta,lower.tail=T) # alternativa
qsup2
# =====================================================================
alfa<-22; beta<-8  # parameters of the posterior distribution (Gamma)
qinf_gamma = qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=TRUE)
qsup_gamma = qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=FALSE)
cat("Interval: [",qsup_gamma,",",qinf_gamma,"]")
## Alternatively with Gamma
qsup2_gamma = qgamma(p=0.975,shape=alfa,rate=beta,lower.tail=T)
cat("Interval: [",qsup2_gamma,",",qinf_gamma,"]")
# With poisson
# being n*theta = 22, and s=8
qinf_pois = ppois(p=0.025,shape=beta-1,rate=alfa,lower.tail=TRUE)
qsup_pois = ppois(p=0.025,shape=beta-1,rate=alfa,lower.tail=FALSE)
cat("Interval: [",qsup_pois,",",qinf_pois,"]")
alfa<-22; beta<-8  # parameters of the posterior distribution (Gamma)
qinf_gamma = qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=TRUE)
qsup_gamma = qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=FALSE)
cat("Interval: [",qsup_gamma,",",qinf_gamma,"]")
## Alternatively with Gamma
qsup2_gamma = qgamma(p=0.975,shape=alfa,rate=beta,lower.tail=T)
cat("Interval: [",qsup2_gamma,",",qinf_gamma,"]")
# With poisson
# being n*theta = 22, and s=8
qinf_pois = ppois(q=beta-1,lambda=alfa,lower.tail=TRUE)
qsup_pois = ppois(q=beta-1,lambda=alfa,lower.tail=FALSE)
cat("Interval: [",qsup_pois,",",qinf_pois,"]")
alfa<-22; beta<-8  # parameters of the posterior distribution (Gamma)
qinf_gamma = qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=TRUE)
qsup_gamma = qgamma(p=0.025,shape=alfa,rate=beta,lower.tail=FALSE)
cat("Interval: [",qsup_gamma,",",qinf_gamma,"]")
## Alternatively with Gamma
qsup2_gamma = qgamma(p=0.975,shape=alfa,rate=beta,lower.tail=T)
cat("Interval: [",qsup2_gamma,",",qinf_gamma,"]")
# With poisson
# being n*theta = 22, and s=8
qinf_pois = ppois(q=beta-1,lambda=alfa,lower.tail=FALSE)
qsup_pois = ppois(q=beta-1,lambda=alfa,lower.tail=TRUE)
cat("Interval: [",qsup_pois,",",qinf_pois,"]")
alpha = 22; beta = 8  # parameters of the posterior distribution (Gamma)
qinf_gamma = qgamma(p=0.025,shape=alpha,rate=beta,lower.tail=TRUE)
qsup_gamma = qgamma(p=0.025,shape=alpha,rate=beta,lower.tail=FALSE)
cat("Interval: [",qsup_gamma,",",qinf_gamma,"]")
## Alternatively with Gamma
qsup2_gamma = qgamma(p=0.975,shape=alpha,rate=beta,lower.tail=T)
cat("Interval: [",qsup2_gamma,",",qinf_gamma,"]")
p_seq = seq(from = 0.01, to = 0.99, length.out = 150)
PACKAGE_LIST <- c('ggplot2', 'data.table', 'dplyr')
## ggplot: ggplot2; geom_line; theme_minimal; facet_wrap; aes
## dplyr: %>%; rbind
## data.table: data.table;
NEW_PACKAGES <- PACKAGE_LIST[!PACKAGE_LIST %in% installed.packages()[,'Package']]
if(length(NEW_PACKAGES)) install.packages(NEW_PACKAGES)
for(PACKAGE_LOOP_VARIABLE in PACKAGE_LIST){library(PACKAGE_LOOP_VARIABLE, character.only = T)}
rm(list=c('NEW_PACKAGES', 'PACKAGE_LIST', 'PACKAGE_LOOP_VARIABLE'))
y_seq = seq(from = 0.01, to = 0.99, length.out = 200)
x_seq = qgamma(y_seq, shape=alpha,rate=beta)
ggplot(data = df_RayleighXY) +
geom_line(aes(x = y_seq, y = y_seq, color = sigma)) +
facet_wrap(~sigma) +
theme_minimal()
y_seq = seq(from = 0.01, to = 0.99, length.out = 200)
x_seq = qgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
ID = c("x","y"),
a = x_seq,
b = y_seq,
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
y_seq = seq(from = 0.01, to = 0.99, length.out = 200)
x_seq = qgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
ID = c("x","y"),
x = x_seq,
y = y_seq,
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
y_seq = seq(from = 0.01, to = 0.99, length.out = 200)
x_seq = qgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
y_seq = seq(from = 0.01, to = 0.99, length.out = 200)
x_seq = qgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
y_seq = seq(from = 0.01, to = 0.99, length.out = 200)
x_seq = pgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
y_seq = seq(from = 0, to = 30, length.out = 200)
x_seq = dgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
y_seq = seq(from = 0, to = 30, length.out = 200)
x_seq = dgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = y, y = x)) +
theme_minimal()
x_seq = seq(from = 0, to = 30, length.out = 200)
y_seq = dgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
x_seq = seq(from = 0, to = 30, length.out = 200)
y_seq = dgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(y_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
theme_minimal()
View(dfEx6)
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_area(auc, fill="pink") +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_area(aes(x=x, y = auc), fill="pink") +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = ifelse{between(x_seq, qinf_gamma, qsup2_gamma), 1, 0}
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_area(aes(x=x, y = auc), fill="pink") +
theme_minimal()
View(dfEx6)
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = ifelse{between(x_seq, qinf_gamma, qsup2_gamma); 1; 0}
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_area(aes(x=x, y = auc), fill="pink") +
theme_minimal()
View(dfEx6)
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_line(aes(x=x, y = y), fill="pink") +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_area(aes(fill=auc))
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6) +
geom_line(aes(x = x, y = y)) +
geom_area(aes(fill=auc)) +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6, aes(x=x, y=y)) +
geom_area(aes(fill=auc)) +
geom_line() +
geom_hline(yintercept=0)
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup2_gamma)
)
ggplot(data = dfEx6, aes(x=x, y=y)) +
geom_area(aes(fill=auc)) +
geom_line() +
geom_hline(yintercept=0) +
theme_minimal()
x_seq = seq(from = 0, to = 6, length.out = 200)
y_seq = dgamma(x_seq, shape=alpha,rate=beta)
dfEx6 = data.table(
x = x_seq,
y = y_seq,
auc = between(x_seq, qinf_gamma, qsup_gamma)
)
ggplot(data = dfEx6, aes(x=x, y=y)) +
geom_area(aes(fill=auc)) +
geom_line() +
geom_hline(yintercept=0) +
theme_minimal()
